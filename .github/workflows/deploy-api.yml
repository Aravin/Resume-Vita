name: Deploy API to AWS CloudPanel

on:
  push:
    branches:
      - main
    paths:
      - 'Code/api/**'
      - '.github/workflows/deploy-api.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: cloudpanel
    env:
      PUPPETEER_SKIP_DOWNLOAD: "true"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: 'Code/api/yarn.lock'

      - name: Install dependencies
        working-directory: Code/api
        run: yarn install --frozen-lockfile

      - name: Build application
        working-directory: Code/api
        run: yarn build

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Deploy to server
        env:
          SSHPASS: ${{ secrets.SFTP_PASSWORD }}
        run: |
          cd Code/api
          # Create SFTP batch file
          echo "mkdir -p ${{ secrets.DEPLOY_PATH }}/dist" > sftp_batch
          echo "cd ${{ secrets.DEPLOY_PATH }}/dist" >> sftp_batch
          echo "put -r dist/*" >> sftp_batch
          echo "cd ${{ secrets.DEPLOY_PATH }}" >> sftp_batch
          echo "put package.json" >> sftp_batch
          echo "put yarn.lock" >> sftp_batch
          
          # Execute SFTP commands
          sshpass -e sftp -o StrictHostKeyChecking=no -b sftp_batch ${{ secrets.SFTP_USERNAME }}@${{ secrets.SERVER_HOST }}
          
          # Run deployment commands
          sshpass -e ssh -o StrictHostKeyChecking=no ${{ secrets.SFTP_USERNAME }}@${{ secrets.SERVER_HOST }} "cd ${{ secrets.DEPLOY_PATH }} && \
            export PUPPETEER_SKIP_DOWNLOAD=true && \
            yarn install --production --frozen-lockfile && \
            pm2 stop api.resumevita.com || true && \
            pm2 start dist/index.js --name api.resumevita.com && \
            pm2 save"
