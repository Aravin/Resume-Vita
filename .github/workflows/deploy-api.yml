name: Deploy API to AWS CloudPanel

on:
  push:
    branches:
      - main
    paths:
      - 'Code/api/**'
      - '.github/workflows/deploy-api.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: cloudpanel
    env:
      PUPPETEER_SKIP_DOWNLOAD: "true"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: 'Code/api/yarn.lock'

      - name: Install dependencies
        working-directory: Code/api
        run: yarn install --frozen-lockfile

      - name: Build application
        working-directory: Code/api
        run: yarn build

      - name: Install curl
        run: sudo apt-get install -y curl

      - name: Debug Connection
        run: |
          echo "Testing connection..."
          echo "Username length: ${#FTP_USER}"
          echo "Password length: ${#FTP_PASS}"
          echo "Host: $FTP_HOST"
          echo "Deploy path: $DEPLOY_PATH"
          
          # Test basic FTP connection
          echo "Step 1: Testing basic FTP connection..."
          curl -v ftp://$FTP_USER:$FTP_PASS@$FTP_HOST/
          
          # Check home directory
          echo "Step 2: Checking home directory..."
          curl -v ftp://$FTP_USER:$FTP_PASS@$FTP_HOST/ --list-only
          
          # Try to create a test file
          echo "Step 3: Testing file creation in home directory..."
          curl -v -T test.txt ftp://$FTP_USER:$FTP_PASS@$FTP_HOST/ --ftp-create-dirs
          
          # Check if we can access deploy path
          echo "Step 4: Testing deploy path access..."
          curl -v ftp://$FTP_USER:$FTP_PASS@$FTP_HOST/$DEPLOY_PATH/ --list-only
        env:
          FTP_USER: ${{ secrets.SFTP_USERNAME }}
          FTP_PASS: ${{ secrets.SFTP_PASSWORD }}
          FTP_HOST: ${{ secrets.SERVER_HOST }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}

      - name: Deploy with FTP
        if: success()
        run: |
          cd Code/api
          echo "Uploading dist files via FTP..."
          for file in dist/*; do
            curl -T "$file" ftp://$FTP_USER:$FTP_PASS@$FTP_HOST/$DEPLOY_PATH/dist/ --ftp-create-dirs
          done
          
          echo "Uploading package files via FTP..."
          curl -T "package.json" ftp://$FTP_USER:$FTP_PASS@$FTP_HOST/$DEPLOY_PATH/
          curl -T "yarn.lock" ftp://$FTP_USER:$FTP_PASS@$FTP_HOST/$DEPLOY_PATH/
          
          echo "Running deployment commands..."
          curl -v ftp://$FTP_USER:$FTP_PASS@$FTP_HOST/$DEPLOY_PATH/ --upload-file deploy.sh
          curl -v ftp://$FTP_USER:$FTP_PASS@$FTP_HOST/$DEPLOY_PATH/ --quote "chmod +x deploy.sh"
          curl -v ftp://$FTP_USER:$FTP_PASS@$FTP_HOST/$DEPLOY_PATH/ --quote "./deploy.sh"
        env:
          FTP_USER: ${{ secrets.SFTP_USERNAME }}
          FTP_PASS: ${{ secrets.SFTP_PASSWORD }}
          FTP_HOST: ${{ secrets.SERVER_HOST }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
